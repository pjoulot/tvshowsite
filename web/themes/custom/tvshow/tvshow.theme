<?php

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function tvshow_preprocess_block(&$variables) {
  $variables['attributes']['class'][] = 'block--' . Html::cleanCssIdentifier($variables['plugin_id']);


  $parts = explode(':', $variables['plugin_id']);
  if (count($parts) === 2) {
    $variables['attributes']['class'][] = 'block-type--' . Html::cleanCssIdentifier($parts[1]);
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function tvshow_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle() . '__' . $variables['elements']['content']['#view_mode']);
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_preprocess_html().
 */
function tvshow_preprocess_html(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $route_name = \Drupal::routeMatch()->getRouteName();
  $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $path_alias = ltrim($path_alias, '/');
  $variables['attributes']['class'][] = 'path-' . Html::cleanCssIdentifier($path_alias);
  $variables['attributes']['class'][] = 'route-' . Html::cleanCssIdentifier($route_name);
}

/**
 * Implements hook_preprocess_html().
 */
function tvshow_preprocess_media(&$variables) {
  if ($variables['media']->bundle() === 'remote_video') {
    $variables['attributes']['class'][] = 'responsive-iframe-container';
  }
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function tvshow_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  // Add view mode theme suggestions.
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
}

/**
 * Implements hook_preprocess_views_view().
 */
function tvshow_preprocess_views_view(&$variables) {
  $variables['attributes']['class'][] = 'view--' . $variables['id'] . '--' . $variables['display_id'];
}
